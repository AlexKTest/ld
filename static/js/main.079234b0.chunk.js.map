{"version":3,"sources":["icons/filter.svg","icons/close.svg","components/filter/filter.tsx","data/data.ts","icons/feature.svg","components/tree/feature.tsx","icons/folder.svg","icons/arrow.svg","components/tree/folder.tsx","components/tree/tree.tsx","components/details/details.tsx","App.tsx","index.tsx"],"names":["Filter","filter","setFilter","className","src","FilterIcon","type","value","onChange","e","target","placeholder","CloseIcon","onClick","data","id","title","folders","features","details","isFolderOrFeatureMatchFilter","includes","isFolderOrChildMatchFilter","folder","some","childFolder","feature","Feature","selectedFeature","setSelectedFeature","filtered","cn","selected","FeatureIcon","Folder","useState","expanded","setExpanded","ArrowIcon","FolderIcon","map","Tree","length","Details","i","gherkin","step","App","filteredFolders","reduce","acc","push","filterFolders","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079234b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/filter.f0c43bf1.svg\";","export default __webpack_public_path__ + \"static/media/close.347f8f60.svg\";","import { FC } from 'react';\n\nimport FilterIcon from '../../icons/filter.svg'\nimport CloseIcon from '../../icons/close.svg'\n\nimport './filter.css';\n\ninterface FilterProps {\n  filter: string;\n  setFilter: (value: string) => void;\n}\n\nexport const Filter: FC<FilterProps> = ({ filter, setFilter }) => {\n  return (\n    <div className='filter'>\n      <img src={FilterIcon} className='filter-icon' />\n      <input\n        className='filter-input'\n        type='text'\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n        placeholder='Filter by keyword'\n      />\n      <img src={CloseIcon} className='close-icon' onClick={() => setFilter('')}/>\n    </div>\n  );\n};\n","export type IData = {\n  title: string;\n  folders: IFolder[];\n};\nexport type IFolder = {\n  id: string;\n  title: string;\n  folders: IFolder[];\n  features: IFeature[];\n};\nexport type IFeature = {\n  id: string;\n  title: string;\n  details: string[][];\n};\n\nexport const data: IData = {\n  title: \"LivingDoc Demo\",\n  folders: [\n    {\n      id: \"b3ce6fe9-cc11-48fe-a34c-6bf1b7f8dd25\",\n      title: \"Demo\",\n      folders: [\n        {\n          id: \"3e19b514-8095-4dfd-9185-1290b55b8a14\",\n          title: \"Filtering\",\n          folders: [],\n          features: [\n            {\n              id: \"feature 1\",\n              title: \"Filtering Positive Test\",\n              details: [\n                [\"Given\", \"I have opened LivingDoc\"],\n                [\"When\", 'I ented \"Filtering Test\" into filter input'],\n                [\"Then\", '\"Filtering Test\" folder should be displayed'],\n                [\"Then\", '\"Tree Test\" folder should not be displayed'],\n                [\"When\", \"I click on the clear filter icon\"],\n                [\"Then\", '\"Filtering Test\" folder should be displayed'],\n                [\"Then\", '\"Tree Test\" folder should be displayed'],\n              ],\n            },\n          ],\n        },\n        {\n          id: \"fe506e9f-c720-4de8-822d-b85f00635ff3\",\n          title: \"Tree\",\n          folders: [],\n          features: [\n            {\n              id: \"3c49ffbb-5acd-4943-9420-48c9dcebe739\",\n              title: \"Feature Opening Test\",\n              details: [\n                [\"Given\", \"I have opened LivingDoc\"],\n                [\"When\", 'I expand \"Filtering Test\" folder'],\n                [\"When\", 'I click on the \"Feature Opening Test\" folder'],\n                [\"Then\", 'Details title should be \"Feature Opening Test\"'],\n              ],\n            },\n          ],\n        },\n      ],\n      features: [],\n    },\n  ],\n};\n\nexport const isFolderOrFeatureMatchFilter = (\n  { title }: { title: string },\n  filter: string\n) => filter && title.includes(filter);\n\nexport const isFolderOrChildMatchFilter = (\n  folder: IFolder,\n  filter: string\n) => {\n  const { folders, features } = folder\n  if (isFolderOrFeatureMatchFilter(folder, filter)) {\n    return true\n  }\n  if (\n    folders.some((childFolder) =>\n      isFolderOrChildMatchFilter(childFolder, filter)\n    )\n  ) {\n    return true;\n  }\n  if (features.some((feature) => isFolderOrFeatureMatchFilter(feature, filter))) {\n    return true;\n  }\n  return false;\n};\n\nexport const filterFolders = (folders: IFolder[], filter: string) => {\n  if (filter === \"\") {\n    return folders;\n  }\n  return folders.reduce((acc, folder) => {\n    if (isFolderOrFeatureMatchFilter(folder, filter)) {\n      acc.push(folder);\n    } else if (isFolderOrChildMatchFilter(folder, filter)) {\n      const { title, folders, features, id } = folder\n      acc.push({\n        id,\n        title,\n        folders: folders.filter((folder) =>\n          isFolderOrChildMatchFilter(folder, filter)\n        ),\n        features: features.filter((feature) =>\n          isFolderOrFeatureMatchFilter(feature, filter)\n        ),\n      });\n    }\n    return acc;\n  }, [] as IFolder[]);\n};\n","export default __webpack_public_path__ + \"static/media/feature.75f2c8e0.svg\";","import { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport FeatureIcon from \"../../icons/feature.svg\";\n\nimport { IFeature, isFolderOrFeatureMatchFilter } from '../../data'\n\nimport \"./feature.css\";\n\ninterface FeatureProps {\n  feature: IFeature,\n  selectedFeature: IFeature | null;\n  setSelectedFeature: (feature: IFeature | null) => void;\n  filter: string;\n}\n\nexport const Feature: FC<FeatureProps> = ({\n  filter,\n  feature,\n  selectedFeature,\n  setSelectedFeature,\n}) => {\n  const {id, title} = feature\n  const filtered = isFolderOrFeatureMatchFilter(feature, filter)\n  return (\n    <div className={cn(\"feature\", {selected: id === selectedFeature?.id})} onClick={() => setSelectedFeature(feature)}>\n      <img src={FeatureIcon} className=\"feature-icon\" />\n      <div className={cn(\"feature-title\", {filtered})}>{title}</div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/folder.bb429a2b.svg\";","export default __webpack_public_path__ + \"static/media/arrow.90148499.svg\";","import { FC, useState } from \"react\";\nimport cn from \"classnames\";\n\nimport { IFolder, IFeature, isFolderOrFeatureMatchFilter } from \"../../data\";\nimport { Feature } from \"./feature\";\n\nimport FolderIcon from \"../../icons/folder.svg\";\nimport ArrowIcon from \"../../icons/arrow.svg\";\n\nimport \"./folder.css\";\n\ninterface FolderProps {\n  title: string;\n  filter: string;\n  folders: IFolder[];\n  features: IFeature[];\n  selectedFeature: IFeature | null;\n  setSelectedFeature: (feature: IFeature | null) => void;\n}\n\nexport const Folder: FC<FolderProps> = ({\n  title,\n  filter,\n  folders,\n  features,\n  selectedFeature,\n  setSelectedFeature,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const filtered = isFolderOrFeatureMatchFilter({ title }, filter)\n  return (\n    <>\n      <div className=\"folder-row\" onClick={() => setExpanded(!expanded)}>\n        <img\n          src={ArrowIcon}\n          className={cn(\"folder-arrow-icon\", { expanded })}\n        />\n        <img src={FolderIcon} className=\"folder-icon\" />\n        <div className={cn(\"folder-title\", {filtered })}>{title}</div>\n      </div>\n      {expanded && (\n        <div className=\"folder-content\">\n          {folders.map(({ title, folders, features, id }) => (\n            <Folder\n              key={id}\n              title={title}\n              filter={filter}\n              folders={folders}\n              features={features}\n              setSelectedFeature={setSelectedFeature}\n              selectedFeature={selectedFeature}\n            />\n          ))}\n          {features.map(feature => (\n            <Feature\n              key={feature.id}\n              filter={filter}\n              feature={feature}\n              setSelectedFeature={setSelectedFeature}\n              selectedFeature={selectedFeature}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n","import { FC } from \"react\";\n\nimport { Folder } from \"./folder\";\n\nimport { IFolder, IFeature } from \"../../data\";\n\ninterface TreeProps {\n  folders: IFolder[];\n  filter: string;\n  selectedFeature: IFeature | null;\n  setSelectedFeature: (feature: IFeature | null) => void;\n}\n\nexport const Tree: FC<TreeProps> = ({ folders, filter, setSelectedFeature, selectedFeature }) => {\n  if (!folders.length) {\n    return <h2>No Features found</h2>\n  }\n  return (\n    <div>\n      {folders.map(({ title, folders, features, id }) => (\n        <Folder\n          filter={filter}\n          key={id}\n          folders={folders}\n          title={title}\n          features={features}\n          setSelectedFeature={setSelectedFeature}\n          selectedFeature={selectedFeature}\n        />\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react'\n\nimport './details.css'\n\ninterface DetailsProps {\n  title: string\n  details: string[][]\n}\n\nexport const Details: FC<DetailsProps> = ({ title, details }) => (\n  <>\n    <h2>{title}</h2>\n    {details.map(([gherkin, step], i) => (\n      // Could use 'i' here as a key due to these items order will never change\n      <div className=\"detail\" key={i}>\n        <span className=\"detail-gherkin\">{gherkin}</span>\n        {step}\n      </div>\n    ))}\n  </>\n)","import { FC, useState } from \"react\";\n\nimport { Filter, Tree, Details } from \"./components\";\nimport { data, IFeature, filterFolders } from \"./data\";\n\nimport \"./App.css\";\n\nexport const App: FC = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [selectedFeature, setSelectedFeature] = useState<IFeature | null>(null);\n  const { title, folders } = data;\n  const filteredFolders = filterFolders(folders, filter)\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app-title\">{title}</h1>\n      <div className=\"app-body\">\n        <div className=\"app-left-part\">\n          <Filter filter={filter} setFilter={setFilter} />\n          <Tree\n            folders={filteredFolders}\n            filter={filter}\n            setSelectedFeature={setSelectedFeature}\n            selectedFeature={selectedFeature}\n          />\n        </div>\n        <div className=\"app-right-part\">\n          {selectedFeature && (\n            <Details\n              title={selectedFeature.title}\n              details={selectedFeature.details}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}